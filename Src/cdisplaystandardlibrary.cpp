//****************************************************************************************************
//подключаемые библиотеки
//****************************************************************************************************
#include "cdisplaystandardlibrary.h"

//****************************************************************************************************
//глобальные переменные
//****************************************************************************************************

//****************************************************************************************************
//константы
//****************************************************************************************************

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//массив символов
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
static const unsigned char Font8x8[224][14]=
{
 {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
 {0x60,0xF0,0xF0,0x60,0x60,0x00,0x60,0x00},
 {0xD8,0xD8,0xD8,0x00,0x00,0x00,0x00,0x00},
 {0x6C,0xFE,0x6C,0x6C,0xFE,0x6C,0x00,0x00},
 {0x18,0x7E,0xC0,0x7C,0x06,0xFC,0x18,0x00},
 {0x00,0xC6,0xCC,0x18,0x30,0x66,0xC6,0x00},
 {0x38,0x6C,0x38,0x6E,0xDC,0xCC,0x76,0x00},
 {0x30,0x30,0x60,0x00,0x00,0x00,0x00,0x00},
 {0x30,0x60,0xC0,0xC0,0xC0,0x60,0x30,0x00},
 {0x60,0x30,0x18,0x18,0x18,0x30,0x60,0x00},
 {0x00,0xCC,0x78,0xFC,0x78,0xCC,0x00,0x00},
 {0x00,0x30,0x30,0xFC,0x30,0x30,0x00,0x00},
 {0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x60},
 {0x00,0x00,0x00,0xFC,0x00,0x00,0x00,0x00},
 {0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00},
 {0x06,0x0C,0x18,0x30,0x60,0xC0,0x80,0x00},
 {0x7C,0xC6,0xCE,0xDE,0xF6,0xE6,0x7C,0x00},
 {0x30,0x70,0x30,0x30,0x30,0x30,0xFC,0x00},
 {0x78,0xCC,0x0C,0x38,0x60,0xCC,0xFC,0x00},
 {0x78,0xCC,0x0C,0x38,0x0C,0xCC,0x78,0x00},
 {0x1C,0x3C,0x6C,0xCC,0xFE,0x0C,0x1E,0x00},
 {0xFC,0xC0,0xF8,0x0C,0x0C,0xCC,0x78,0x00},
 {0x38,0x60,0xC0,0xF8,0xCC,0xCC,0x78,0x00},
 {0xFC,0xCC,0x0C,0x18,0x30,0x30,0x30,0x00},
 {0x78,0xCC,0xCC,0x78,0xCC,0xCC,0x78,0x00},
 {0x78,0xCC,0xCC,0x7C,0x0C,0x18,0x70,0x00},
 {0x00,0x30,0x30,0x00,0x00,0x30,0x30,0x00},
 {0x00,0x30,0x30,0x00,0x00,0x30,0x30,0x60},
 {0x18,0x30,0x60,0xC0,0x60,0x30,0x18,0x00},
 {0x00,0x00,0xFC,0x00,0x00,0xFC,0x00,0x00},
 {0x60,0x30,0x18,0x0C,0x18,0x30,0x60,0x00},
 {0x78,0xCC,0x0C,0x18,0x30,0x00,0x30,0x00},
 {0x7C,0xC6,0xDE,0xDE,0xDE,0xC0,0x78,0x00},
 {0x30,0x78,0xCC,0xCC,0xFC,0xCC,0xCC,0x00},
 {0xFC,0x66,0x66,0x7C,0x66,0x66,0xFC,0x00},
 {0x3C,0x66,0xC0,0xC0,0xC0,0x66,0x3C,0x00},
 {0xF8,0x6C,0x66,0x66,0x66,0x6C,0xF8,0x00},
 {0xFE,0x62,0x68,0x78,0x68,0x62,0xFE,0x00},
 {0xFE,0x62,0x68,0x78,0x68,0x60,0xF0,0x00},
 {0x3C,0x66,0xC0,0xC0,0xCE,0x66,0x3E,0x00},
 {0xCC,0xCC,0xCC,0xFC,0xCC,0xCC,0xCC,0x00},
 {0x78,0x30,0x30,0x30,0x30,0x30,0x78,0x00},
 {0x1E,0x0C,0x0C,0x0C,0xCC,0xCC,0x78,0x00},
 {0xE6,0x66,0x6C,0x78,0x6C,0x66,0xE6,0x00},
 {0xF0,0x60,0x60,0x60,0x62,0x66,0xFE,0x00},
 {0xC6,0xEE,0xFE,0xFE,0xD6,0xC6,0xC6,0x00},
 {0xC6,0xE6,0xF6,0xDE,0xCE,0xC6,0xC6,0x00},
 {0x38,0x6C,0xC6,0xC6,0xC6,0x6C,0x38,0x00},
 {0xFC,0x66,0x66,0x7C,0x60,0x60,0xF0,0x00},
 {0x78,0xCC,0xCC,0xCC,0xDC,0x78,0x1C,0x00},
 {0xFC,0x66,0x66,0x7C,0x6C,0x66,0xE6,0x00},
 {0x78,0xCC,0xE0,0x70,0x1C,0xCC,0x78,0x00},
 {0xFC,0xB4,0x30,0x30,0x30,0x30,0x78,0x00},
 {0xCC,0xCC,0xCC,0xCC,0xCC,0xCC,0xFC,0x00},
 {0xCC,0xCC,0xCC,0xCC,0xCC,0x78,0x30,0x00},
 {0xC6,0xC6,0xC6,0xD6,0xFE,0xEE,0xC6,0x00},
 {0xC6,0xC6,0x6C,0x38,0x38,0x6C,0xC6,0x00},
 {0xCC,0xCC,0xCC,0x78,0x30,0x30,0x78,0x00},
 {0xFE,0xC6,0x8C,0x18,0x32,0x66,0xFE,0x00},
 {0x78,0x60,0x60,0x60,0x60,0x60,0x78,0x00},
 {0xC0,0x60,0x30,0x18,0x0C,0x06,0x02,0x00},
 {0x78,0x18,0x18,0x18,0x18,0x18,0x78,0x00},
 {0x10,0x38,0x6C,0xC6,0x00,0x00,0x00,0x00},
 {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF},
 {0x30,0x30,0x18,0x00,0x00,0x00,0x00,0x00},
 {0x00,0x00,0x78,0x0C,0x7C,0xCC,0x76,0x00},
 {0xE0,0x60,0x60,0x7C,0x66,0x66,0xDC,0x00},
 {0x00,0x00,0x78,0xCC,0xC0,0xCC,0x78,0x00},
 {0x1C,0x0C,0x0C,0x7C,0xCC,0xCC,0x76,0x00},
 {0x00,0x00,0x78,0xCC,0xFC,0xC0,0x78,0x00},
 {0x38,0x6C,0x60,0xF0,0x60,0x60,0xF0,0x00},
 {0x00,0x00,0x76,0xCC,0xCC,0x7C,0x0C,0xF8},
 {0xE0,0x60,0x6C,0x76,0x66,0x66,0xE6,0x00},
 {0x30,0x00,0x70,0x30,0x30,0x30,0x78,0x00},
 {0x0C,0x00,0x0C,0x0C,0x0C,0xCC,0xCC,0x78},
 {0xE0,0x60,0x66,0x6C,0x78,0x6C,0xE6,0x00},
 {0x70,0x30,0x30,0x30,0x30,0x30,0x78,0x00},
 {0x00,0x00,0xCC,0xFE,0xFE,0xD6,0xC6,0x00},
 {0x00,0x00,0xF8,0xCC,0xCC,0xCC,0xCC,0x00},
 {0x00,0x00,0x78,0xCC,0xCC,0xCC,0x78,0x00},
 {0x00,0x00,0xDC,0x66,0x66,0x7C,0x60,0xF0},
 {0x00,0x00,0x76,0xCC,0xCC,0x7C,0x0C,0x1E},
 {0x00,0x00,0xDC,0x76,0x66,0x60,0xF0,0x00},
 {0x00,0x00,0x7C,0xC0,0x78,0x0C,0xF8,0x00},
 {0x10,0x30,0x7C,0x30,0x30,0x34,0x18,0x00},
 {0x00,0x00,0xCC,0xCC,0xCC,0xCC,0x76,0x00},
 {0x00,0x00,0xCC,0xCC,0xCC,0x78,0x30,0x00},
 {0x00,0x00,0xC6,0xD6,0xFE,0xFE,0x6C,0x00},
 {0x00,0x00,0xC6,0x6C,0x38,0x6C,0xC6,0x00},
 {0x00,0x00,0xCC,0xCC,0xCC,0x7C,0x0C,0xF8},
 {0x00,0x00,0xFC,0x98,0x30,0x64,0xFC,0x00},
 {0x1C,0x30,0x30,0xE0,0x30,0x30,0x1C,0x00},
 {0x18,0x18,0x18,0x00,0x18,0x18,0x18,0x00},
 {0xE0,0x30,0x30,0x1C,0x30,0x30,0xE0,0x00},
 {0x76,0xDC,0x00,0x00,0x00,0x00,0x00,0x00},
 {0x00,0x10,0x38,0x6C,0xC6,0xC6,0xFE,0x00},
 {0x1E,0x36,0x66,0x66,0x7E,0x66,0x66,0x00},
 {0x7C,0x60,0x60,0x7C,0x66,0x66,0x7C,0x00},
 {0x7C,0x66,0x66,0x7C,0x66,0x66,0x7C,0x00},
 {0x7E,0x60,0x60,0x60,0x60,0x60,0x60,0x00},
 {0x38,0x6C,0x6C,0x6C,0x6C,0x6C,0xFE,0xC6},
 {0x7E,0x60,0x60,0x7C,0x60,0x60,0x7E,0x00},
 {0xDB,0xDB,0x7E,0x3C,0x7E,0xDB,0xDB,0x00},
 {0xFE,0x00,0x00,0xFE,0x00,0x00,0xFE,0x00},
 {0x66,0x66,0x6E,0x7E,0x76,0x66,0x66,0x00},
 {0x3C,0x66,0x6E,0x7E,0x76,0x66,0x66,0x00},
 {0x66,0x6C,0x78,0x70,0x78,0x6C,0x66,0x00},
 {0x1E,0x36,0x66,0x66,0x66,0x66,0x66,0x00},
 {0xC6,0xEE,0xFE,0xFE,0xD6,0xC6,0xC6,0x00},
 {0x66,0x66,0x66,0x7E,0x66,0x66,0x66,0x00},
 {0x3C,0x66,0x66,0x66,0x66,0x66,0x3C,0x00},
 {0x7E,0x66,0x66,0x66,0x66,0x66,0x66,0x00},
 {0x7E,0x81,0xA5,0x81,0xA5,0x99,0x81,0x7E},
 {0x3C,0x66,0x60,0x60,0x60,0x66,0x3C,0x00},
 {0x7E,0x18,0x18,0x18,0x18,0x18,0x18,0x00},
 {0x66,0x66,0x66,0x3E,0x06,0x66,0x3C,0x00},
 {0x7E,0xDB,0xDB,0xDB,0x7E,0x18,0x18,0x00},
 {0x00,0x38,0x7C,0x7C,0x7C,0x38,0x00,0x00},
 {0x66,0x66,0x66,0x66,0x66,0x66,0x7F,0x03},
 {0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00},
 {0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xFF,0x00},
 {0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xFF,0x03},
 {0xE0,0x60,0x60,0x7C,0x66,0x66,0x7C,0x00},
 {0xC6,0xC6,0xC6,0xF6,0xDE,0xDE,0xF6,0x00},
 {0x60,0x60,0x60,0x7C,0x66,0x66,0x7C,0x00},
 {0x78,0x8C,0x06,0x3E,0x06,0x8C,0x78,0x00},
 {0xCE,0xDB,0xDB,0xFB,0xDB,0xDB,0xCE,0x00},
 {0x3E,0x66,0x66,0x66,0x3E,0x36,0x66,0x00},
 {0x00,0x00,0x78,0x0C,0x7C,0xCC,0x76,0x00},
 {0x00,0x3C,0x60,0x3C,0x66,0x66,0x3C,0x00},
 {0x00,0x00,0x7C,0x66,0x7C,0x66,0x7C,0x00},
 {0x00,0x00,0x7E,0x60,0x60,0x60,0x60,0x00},
 {0x00,0x00,0x3C,0x6C,0x6C,0x6C,0xFE,0xC6},
 {0x00,0x00,0x3C,0x66,0x7E,0x60,0x3C,0x00},
 {0x00,0x00,0xDB,0x7E,0x3C,0x7E,0xDB,0x00},
 {0x00,0x00,0x3C,0x66,0x0C,0x66,0x3C,0x00},
 {0x7E,0x60,0x60,0x7E,0x60,0x60,0x7E,0x00},
 {0x00,0x18,0x66,0x6E,0x7E,0x76,0x66,0x00},
 {0x00,0x00,0x66,0x6C,0x78,0x6C,0x66,0x00},
 {0x00,0x00,0x1E,0x36,0x66,0x66,0x66,0x00},
 {0x00,0x00,0xC6,0xFE,0xFE,0xD6,0xC6,0x00},
 {0x00,0x00,0x66,0x66,0x7E,0x66,0x66,0x00},
 {0x00,0x00,0x3C,0x66,0x66,0x66,0x3C,0x00},
 {0x00,0x00,0x7E,0x66,0x66,0x66,0x66,0x00},
 {0x11,0x44,0x11,0x44,0x11,0x44,0x11,0x44},
 {0x55,0xAA,0x55,0xAA,0x55,0xAA,0x55,0xAA},
 {0xDD,0x77,0xDD,0x77,0xDD,0x77,0xDD,0x77},
 {0x18,0x18,0x18,0x18,0x18,0x18,0x18,0x18},
 {0x18,0x18,0x18,0xF8,0x18,0x18,0x18,0x18},
 {0x18,0xF8,0x18,0xF8,0x18,0x18,0x18,0x18},
 {0x36,0x36,0x36,0xF6,0x36,0x36,0x36,0x36},
 {0x00,0x00,0x00,0xFE,0x36,0x36,0x36,0x36},
 {0x24,0x00,0x3C,0x66,0x7E,0x60,0x3C,0x00},
 {0x8E,0x88,0xC8,0xA8,0x98,0x88,0x88,0x00},
 {0x36,0x36,0x36,0x36,0x36,0x36,0x36,0x36},
 {0x00,0xFE,0x06,0xF6,0x36,0x36,0x36,0x36},
 {0x36,0xF6,0x06,0xFE,0x00,0x00,0x00,0x00},
 {0x36,0x36,0x36,0xFE,0x00,0x00,0x00,0x00},
 {0x18,0xF8,0x18,0xF8,0x00,0x00,0x00,0x00},
 {0x00,0x00,0x00,0xF8,0x18,0x18,0x18,0x18},
 {0x1E,0x36,0x66,0x66,0x7E,0x66,0x66,0x00},
 {0x7C,0x60,0x60,0x7C,0x66,0x66,0x7C,0x00},
 {0x7C,0x66,0x66,0x7C,0x66,0x66,0x7C,0x00},
 {0x7E,0x60,0x60,0x60,0x60,0x60,0x60,0x00},
 {0x38,0x6C,0x6C,0x6C,0x6C,0x6C,0xFE,0xC6},
 {0x7E,0x60,0x60,0x7C,0x60,0x60,0x7E,0x00},
 {0xDB,0xDB,0x7E,0x3C,0x7E,0xDB,0xDB,0x00},
 {0x3C,0x66,0x06,0x1C,0x06,0x66,0x3C,0x00},
 {0x66,0x66,0x6E,0x7E,0x76,0x66,0x66,0x00},
 {0x3C,0x66,0x6E,0x7E,0x76,0x66,0x66,0x00},
 {0x66,0x6C,0x78,0x70,0x78,0x6C,0x66,0x00},
 {0x1E,0x36,0x66,0x66,0x66,0x66,0x66,0x00},
 {0xC6,0xEE,0xFE,0xFE,0xD6,0xC6,0xC6,0x00},
 {0x66,0x66,0x66,0x7E,0x66,0x66,0x66,0x00},
 {0x3C,0x66,0x66,0x66,0x66,0x66,0x3C,0x00},
 {0x7E,0x66,0x66,0x66,0x66,0x66,0x66,0x00},
 {0x7C,0x66,0x66,0x66,0x7C,0x60,0x60,0x00},
 {0x3C,0x66,0x60,0x60,0x60,0x66,0x3C,0x00},
 {0x7E,0x18,0x18,0x18,0x18,0x18,0x18,0x00},
 {0x66,0x66,0x66,0x3E,0x06,0x66,0x3C,0x00},
 {0x7E,0xDB,0xDB,0xDB,0x7E,0x18,0x18,0x00},
 {0x66,0x66,0x3C,0x18,0x3C,0x66,0x66,0x00},
 {0x66,0x66,0x66,0x66,0x66,0x66,0x7F,0x03},
 {0x66,0x66,0x66,0x3E,0x06,0x06,0x06,0x00},
 {0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xFF,0x00},
 {0xDB,0xDB,0xDB,0xDB,0xDB,0xDB,0xFF,0x03},
 {0xE0,0x60,0x60,0x7C,0x66,0x66,0x7C,0x00},
 {0xC6,0xC6,0xC6,0xF6,0xDE,0xDE,0xF6,0x00},
 {0x60,0x60,0x60,0x7C,0x66,0x66,0x7C,0x00},
 {0x78,0x8C,0x06,0x3E,0x06,0x8C,0x78,0x00},
 {0xCE,0xDB,0xDB,0xFB,0xDB,0xDB,0xCE,0x00},
 {0x3E,0x66,0x66,0x66,0x3E,0x36,0x66,0x00},
 {0x00,0x00,0x78,0x0C,0x7C,0xCC,0x76,0x00},
 {0x00,0x3C,0x60,0x3C,0x66,0x66,0x3C,0x00},
 {0x00,0x00,0x7C,0x66,0x7C,0x66,0x7C,0x00},
 {0x00,0x00,0x7E,0x60,0x60,0x60,0x60,0x00},
 {0x00,0x00,0x3C,0x6C,0x6C,0x6C,0xFE,0xC6},
 {0x00,0x00,0x3C,0x66,0x7E,0x60,0x3C,0x00},
 {0x00,0x00,0xDB,0x7E,0x3C,0x7E,0xDB,0x00},
 {0x00,0x00,0x3C,0x66,0x0C,0x66,0x3C,0x00},
 {0x00,0x00,0x66,0x6E,0x7E,0x76,0x66,0x00},
 {0x00,0x18,0x66,0x6E,0x7E,0x76,0x66,0x00},
 {0x00,0x00,0x66,0x6C,0x78,0x6C,0x66,0x00},
 {0x00,0x00,0x1E,0x36,0x66,0x66,0x66,0x00},
 {0x00,0x00,0xC6,0xFE,0xFE,0xD6,0xC6,0x00},
 {0x00,0x00,0x66,0x66,0x7E,0x66,0x66,0x00},
 {0x00,0x00,0x3C,0x66,0x66,0x66,0x3C,0x00},
 {0x00,0x00,0x7E,0x66,0x66,0x66,0x66,0x00},
 {0x00,0x00,0x7C,0x66,0x66,0x7C,0x60,0x00},
 {0x00,0x00,0x3C,0x66,0x60,0x66,0x3C,0x00},
 {0x00,0x00,0x7E,0x18,0x18,0x18,0x18,0x00},
 {0x00,0x00,0x66,0x66,0x3E,0x06,0x3C,0x00},
 {0x00,0x00,0x7E,0xDB,0xDB,0x7E,0x18,0x00},
 {0x00,0x00,0x66,0x3C,0x18,0x3C,0x66,0x00},
 {0x00,0x00,0x66,0x66,0x66,0x66,0x7F,0x03},
 {0x00,0x00,0x66,0x66,0x3E,0x06,0x06,0x00},
 {0x00,0x00,0xDB,0xDB,0xDB,0xDB,0xFF,0x00},
 {0x00,0x00,0xDB,0xDB,0xDB,0xDB,0xFF,0x03},
 {0x00,0x00,0xE0,0x60,0x7C,0x66,0x7C,0x00},
 {0x00,0x00,0xC6,0xC6,0xF6,0xDE,0xF6,0x00},
 {0x00,0x00,0x60,0x60,0x7C,0x66,0x7C,0x00},
 {0x00,0x00,0x7C,0x06,0x3E,0x06,0x7C,0x00},
 {0x00,0x00,0xCE,0xDB,0xFB,0xDB,0xCE,0x00},
 {0x00,0x00,0x3E,0x66,0x3E,0x36,0x66,0x00}
};

//****************************************************************************************************
//макроопределения
//****************************************************************************************************

//****************************************************************************************************
//конструктор и деструктор
//****************************************************************************************************

//----------------------------------------------------------------------------------------------------
//конструктор
//----------------------------------------------------------------------------------------------------
CDisplayStandardLibrary::CDisplayStandardLibrary(IDisplay *iDisplay_Ptr_Set,bool orientation_vertical)
{ 
 iDisplay_Ptr=iDisplay_Ptr_Set;
 PrintYPosition=0;
 ClearColor=iDisplay_Ptr->COLOR_WHITE;
 OrientationVertical=orientation_vertical;
}
//----------------------------------------------------------------------------------------------------
//деструктор
//----------------------------------------------------------------------------------------------------
CDisplayStandardLibrary::~CDisplayStandardLibrary()
{
}

//****************************************************************************************************
//закрытые функции
//****************************************************************************************************

//----------------------------------------------------------------------------------------------------
//вывод символа в позицию в вертикальной ориентации
//----------------------------------------------------------------------------------------------------
void CDisplayStandardLibrary::PutSymbolVertical(int32_t x,int32_t y,uint8_t symbol,uint16_t color)
{
 for(int32_t ys=0;ys<FONT_HEIGHT;ys++)
 {
  uint8_t byte=Font8x8[symbol][ys];
  uint8_t mask=128;
  for(int32_t xs=0;xs<FONT_WIDTH;xs++,mask>>=1)
  {   
   if (x+xs<0 || x+xs>=iDisplay_Ptr->DISPLAY_WIDTH) continue;
   if (y+ys<0 || y+ys>=iDisplay_Ptr->DISPLAY_HEIGHT) continue;
   if (byte&mask) iDisplay_Ptr->PutPixel(x+xs,y+ys,color);
  }
 }
}

//----------------------------------------------------------------------------------------------------
//вывод символа в позицию в горизонтальной ориентации
//----------------------------------------------------------------------------------------------------
void CDisplayStandardLibrary::PutSymbolHorizontal(int32_t x,int32_t y,uint8_t symbol,uint16_t color)
{
 for(int32_t ys=0;ys<FONT_HEIGHT;ys++)
 {
  uint8_t byte=Font8x8[symbol][ys];
  uint8_t mask=128;
  for(int32_t xs=0;xs<FONT_WIDTH;xs++,mask>>=1)
  {
   if (x+xs<0 || x+xs>=iDisplay_Ptr->DISPLAY_HEIGHT) continue;
   if (y+ys<0 || y+ys>=iDisplay_Ptr->DISPLAY_WIDTH) continue;
   if (byte&mask) iDisplay_Ptr->PutPixel(iDisplay_Ptr->DISPLAY_WIDTH-(y+ys),x+xs,color);
  }
 }
}


//****************************************************************************************************
//открытые функции
//****************************************************************************************************

//----------------------------------------------------------------------------------------------------
//вывод символа в позицию
//----------------------------------------------------------------------------------------------------
void CDisplayStandardLibrary::PutSymbol(int32_t x,int32_t y,char symbol,uint16_t color)
{
 uint8_t s=(uint8_t)(symbol);
 if (s<=32) return;
 s-=32;
 if (s>223) return;
 //рисуем символ
 if (OrientationVertical==true) PutSymbolVertical(x,y,s,color);	
                           else PutSymbolHorizontal(x,y,s,color);	
}
//----------------------------------------------------------------------------------------------------
//вывод строчки в позицию
//----------------------------------------------------------------------------------------------------
void CDisplayStandardLibrary::PutString(int32_t x,int32_t y,const char *string,uint16_t color)
{
 uint32_t s=0;	
 while((*string)!=0)
 {
  PutSymbol(x,y,*string,color);
	x+=FONT_WIDTH;
	string++;
	s++;
 }
}
//----------------------------------------------------------------------------------------------------
//вывести текст в текущую позицию
//----------------------------------------------------------------------------------------------------
void CDisplayStandardLibrary::Print(const char *string,uint16_t color)
{
 if (OrientationVertical==true)
 {
	if (PrintYPosition+FONT_HEIGHT>=iDisplay_Ptr->DISPLAY_HEIGHT) Clear(ClearColor);
 }
 else
 {
	if (PrintYPosition+FONT_HEIGHT>=iDisplay_Ptr->DISPLAY_WIDTH) Clear(ClearColor);
 }
 PutString(0,PrintYPosition,string,color);
 PrintYPosition+=FONT_HEIGHT;
}
//----------------------------------------------------------------------------------------------------
//сбросить текущую позицию и очистить дисплей 
//----------------------------------------------------------------------------------------------------
void CDisplayStandardLibrary::Clear(uint16_t color)
{
 PrintYPosition=0;
 ClearColor=color;	
 iDisplay_Ptr->SetWindow(0,0,iDisplay_Ptr->DISPLAY_WIDTH-1,iDisplay_Ptr->DISPLAY_HEIGHT-1);
 for(uint32_t y=0;y<iDisplay_Ptr->DISPLAY_HEIGHT;y++)
 {
  for(uint32_t x=0;x<iDisplay_Ptr->DISPLAY_WIDTH;x++) iDisplay_Ptr->OutColor(color);
 }
}

